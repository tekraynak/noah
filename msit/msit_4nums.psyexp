<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="3.0.0b12">
  <Settings>
    <Param name="Completed URL" updates="None" val="" valType="str"/>
    <Param name="Data filename" updates="None" val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code"/>
    <Param name="Enable Escape" updates="None" val="True" valType="bool"/>
    <Param name="Experiment info" updates="None" val="{'participant': '', 'session': '001'}" valType="code"/>
    <Param name="Force stereo" updates="None" val="True" valType="bool"/>
    <Param name="Full-screen window" updates="None" val="True" valType="bool"/>
    <Param name="HTML path" updates="None" val="html" valType="str"/>
    <Param name="Incomplete URL" updates="None" val="" valType="str"/>
    <Param name="JS libs" updates="None" val="packaged" valType="str"/>
    <Param name="Monitor" updates="None" val="testMonitor" valType="str"/>
    <Param name="Save csv file" updates="None" val="False" valType="bool"/>
    <Param name="Save excel file" updates="None" val="False" valType="bool"/>
    <Param name="Save log file" updates="None" val="True" valType="bool"/>
    <Param name="Save psydat file" updates="None" val="True" valType="bool"/>
    <Param name="Save wide csv file" updates="None" val="True" valType="bool"/>
    <Param name="Screen" updates="None" val="1" valType="num"/>
    <Param name="Show info dlg" updates="None" val="True" valType="bool"/>
    <Param name="Show mouse" updates="None" val="False" valType="bool"/>
    <Param name="Units" updates="None" val="use prefs" valType="str"/>
    <Param name="Use version" updates="None" val="" valType="str"/>
    <Param name="Window size (pixels)" updates="None" val="[1440, 900]" valType="code"/>
    <Param name="blendMode" updates="None" val="avg" valType="str"/>
    <Param name="color" updates="None" val="black" valType="str"/>
    <Param name="colorSpace" updates="None" val="rgb" valType="str"/>
    <Param name="expName" updates="None" val="msit_4nums" valType="str"/>
    <Param name="exportHTML" updates="None" val="on Sync" valType="str"/>
    <Param name="logging level" updates="None" val="exp" valType="code"/>
  </Settings>
  <Routines>
    <Routine name="trial">
      <CodeComponent name="trial_code">
        <Param name="Begin Experiment" updates="constant" val="import numpy as np&amp;#10;&amp;#10;# for 1st trial of task (during 1st incongruent block), allowed response time is 5 seconds&amp;#10;allowed_rt = 5&amp;#10;&amp;#10;# set 'consecutive correct/incorrect' variables for ITI yoking&amp;#10;numConsecutiveCorrect = 0&amp;#10;numConsecutiveIncorrect = 0&amp;#10;&amp;#10;# set block length (default is 60)&amp;#10;blockLength = 60" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="nums = '%d %d %d %d'%(num1, num2, num3, num4)&amp;#10;&amp;#10;# calculate correct response given num1 num2 num3&amp;#10;for i in nums:&amp;#10;  if nums.count(i) == 1:&amp;#10;    corrAns = i&amp;#10;    break&amp;#10;&amp;#10;### RT and ITI ###&amp;#10;# for 1st trial of task (during 1st incongruent block), allowed response time is 5 seconds&amp;#10;# for 2nd trial, record the prior RT and add 300ms to it for subsequent trials&amp;#10;# for trial 2-n, use titration methods below&amp;#10;if Condition == 'Incongruent' and msit_block_condition_order.thisN ==0 and trial_list.thisN == 1:&amp;#10;    allowed_rt = resp.rt + .3&amp;#10;&amp;#10;# for INCONGRUENT blocks, titrate allowed reaction time (ITI)&amp;#10;# if participant is correct 3 trials in a row, shorten allowed time by 300ms&amp;#10;# if participant is incorrect 3 trials in a row, lengthen allowed time by 300ms&amp;#10;if Condition == 'Incongruent':&amp;#10;    if numConsecutiveCorrect &gt;= 3:&amp;#10;        allowed_rt = allowed_rt - .3&amp;#10;    if numConsecutiveIncorrect &gt;= 3:&amp;#10;        allowed_rt = allowed_rt + .3&amp;#10;        &amp;#10;# for CONGRUENT blocks, set ITI to the mean ITI of the prior incongruent block&amp;#10;if Condition == 'Congruent' and trial_list.thisN == 0:&amp;#10;    allowed_rt = mean_rt&amp;#10;&amp;#10;# do not allow the ITI to get too long or too short&amp;#10;if allowed_rt &lt; .4:&amp;#10;    allowed_rt = .4&amp;#10;elif allowed_rt &gt; 5:&amp;#10;    allowed_rt = 5&amp;#10;&amp;#10;# record onset times for each block and trial (measured within block)&amp;#10;# first, record clock as block onset for when it is the first trial&amp;#10;if trial_list.thisN == 0: &amp;#10;    blockOnset = globalClock.getTime() - scannerTriggerOnset&amp;#10;# second, record clock as trial onset&amp;#10;trialOnset = globalClock.getTime() - blockOnset&amp;#10;&amp;#10;# log timing variables for manipulation checks&amp;#10;thisExp.addData('blockOnset', blockOnset)&amp;#10;thisExp.addData('trialOnset', trialOnset)&amp;#10;&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="# calculate mean running (1) accuracy and (2) reaction time&amp;#10;# first, create arrays to store these data (overwrite during every new block)&amp;#10;if trial_list.thisN == 0:&amp;#10;    rt_list = []&amp;#10;    corr_list = []&amp;#10;    numConsecutiveCorrect = 0&amp;#10;    numConsecutiveIncorrect = 0&amp;#10;&amp;#10;# if participant responds during the trial, add the RT to the running list&amp;#10;if resp.keys:&amp;#10;    rt_list.append(resp.rt)&amp;#10;corr_list.append(resp.corr)&amp;#10;&amp;#10;#if Condition == 'Incongruent':&amp;#10;#    incon_mean_rt = np.mean(rt_list)&amp;#10;#    incon_mean_accuracy = np.mean(corr_list)&amp;#10;#    con_mean_rt = []&amp;#10;#    con_mean_accuracy = []&amp;#10;#elif Condition == 'Congruent':&amp;#10;#    con_mean_rt = np.mean(rt_list)&amp;#10;#    con_mean_accuracy = np.mean(corr_list)&amp;#10;#    incon_mean_rt = []&amp;#10;#    incon_mean_accuracy = []&amp;#10;&amp;#10;mean_rt = np.mean(rt_list)&amp;#10;mean_accuracy = np.mean(corr_list)&amp;#10;&amp;#10;# calculate # of consecutive correct / incorrect responses (for yoking)&amp;#10;if resp.corr:&amp;#10;    numConsecutiveCorrect = numConsecutiveCorrect + 1&amp;#10;    numConsecutiveIncorrect = 0&amp;#10;else:&amp;#10;    numConsecutiveCorrect = 0&amp;#10;    numConsecutiveIncorrect = numConsecutiveIncorrect + 1&amp;#10;&amp;#10;# export variables&amp;#10;thisExp.addData('allowed_rt', allowed_rt)&amp;#10;thisExp.addData('mean_rt', mean_rt)&amp;#10;thisExp.addData('mean_accuracy', mean_accuracy)&amp;#10;thisExp.addData('numConsecutiveCorrect', numConsecutiveCorrect)&amp;#10;thisExp.addData('numConsecutiveIncorrect', numConsecutiveIncorrect)" valType="extendedCode"/>
        <Param name="name" updates="None" val="trial_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="number_stims">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.5" valType="code"/>
        <Param name="name" updates="None" val="number_stims" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$allowed_rt" valType="code"/>
        <Param name="text" updates="set every repeat" val="$nums" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="resp">
        <Param name="allowedKeys" updates="set every repeat" val="'1', '2', '3', '4'" valType="code"/>
        <Param name="correctAns" updates="constant" val="$corrAns" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="resp" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$allowed_rt" valType="code"/>
        <Param name="store" updates="constant" val="first key" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="True" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="wait_for_scanner">
      <CodeComponent name="trigger_code">
        <Param name="Begin Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="# set interal clock time for when scanner is triggered&amp;#10;scannerTriggerOnset = globalClock.getTime()&amp;#10;thisExp.addData('scannerTriggerOnset', scannerTriggerOnset)" valType="extendedCode"/>
        <Param name="name" updates="None" val="trigger_code" valType="code"/>
      </CodeComponent>
      <KeyboardComponent name="scanner_trigger">
        <Param name="allowedKeys" updates="constant" val="'asciicircum'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="scanner_trigger" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
      <TextComponent name="waiting_for_scanner_text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="waiting_for_scanner_text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="condition" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="waiting for scanner ..." valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="feedback">
      <CodeComponent name="feedback_code">
        <Param name="Begin Experiment" updates="constant" val="msg = ''&amp;#10;msg_color = 'white'&amp;#10;msg_size = .5" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="xPos = [-.37, -.12, .12, .37]&amp;#10;yPos = 0&amp;#10;&amp;#10;# set length of feedback window&amp;#10;# for incongruent blocks, make it 1 sec&amp;#10;# for congruent blocks, to control for motor response differences, pad the feedback so there are as many congruent trials as incongruent trials&amp;#10;if Condition == 'Incongruent':&amp;#10;    feedback_length = 1&amp;#10;elif Condition == 'Congruent':&amp;#10;    conTrialLength = (blockLength - restDurationPad) / numCompletedTrials&amp;#10;    if resp.keys:&amp;#10;        feedback_length = conTrialLength - resp.rt&amp;#10;    else:&amp;#10;        feedback_length = conTrialLength - allowed_rt&amp;#10;thisExp.addData('feedback_length', feedback_length)&amp;#10;&amp;#10;# give feedback&amp;#10;if not resp.keys :&amp;#10;    nums = '' # remove the number stimuli&amp;#10;    msg = &quot;TOO LATE!&quot;&amp;#10;    msg_color = 'white'&amp;#10;    xPos = 0&amp;#10;    msg_size = .3&amp;#10;elif resp.corr: #stored on last run routine&amp;#10;    msg = &quot;O&quot; &amp;#10;    msg_color = 'green'&amp;#10;    xPos = xPos[int(resp.keys)-1]&amp;#10;    msg_size = .5&amp;#10;else:&amp;#10;    msg = &quot;X&quot;&amp;#10;    msg_color = 'red'&amp;#10;    xPos = xPos[int(resp.keys)-1]&amp;#10;    msg_size = .5" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="# block lengths should be about 60 seconds&amp;#10;# if there is not enough time for a new trial, then terminate routine&amp;#10;if globalClock.getTime() - blockOnset + allowed_rt + feedback_length &gt; blockLength:&amp;#10;    trial_list.finished = True&amp;#10;    continueRoutine = False" valType="extendedCode"/>
        <Param name="name" updates="None" val="feedback_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="number_stims_cont">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.5" valType="code"/>
        <Param name="name" updates="None" val="number_stims_cont" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="(0,0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0" valType="code"/>
        <Param name="stopType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$feedback_length" valType="code"/>
        <Param name="text" updates="set every repeat" val="$nums" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <TextComponent name="feedback_text">
        <Param name="color" updates="set every repeat" val="$msg_color" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="set every repeat" val="$msg_size" valType="code"/>
        <Param name="name" updates="None" val="feedback_text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="set every repeat" val="$(xPos, yPos)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$feedback_length" valType="code"/>
        <Param name="text" updates="set every repeat" val="$msg" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="rest_end">
      <CodeComponent name="rest_crosshair_code">
        <Param name="Begin Experiment" updates="constant" val="# set desired duration for rest&amp;#10;# note this will be padded with a few varying seconds&amp;#10;restDuration = 10" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="# record number of trials completed in the block - need this for yoking congruent blocks&amp;#10;numCompletedTrials = trial_list.thisN&amp;#10;thisExp.addData('numCompletedTrials', numCompletedTrials)&amp;#10;&amp;#10;&amp;#10;# need to 'pad' the resting baseline duration since MSIT blocks end a few seconds early&amp;#10;restOnset = globalClock.getTime() - scannerTriggerOnset&amp;#10;restDurationPad = ((round(restOnset/10))*10) - restOnset&amp;#10;thisRestDuration = restDurationPad&amp;#10;#thisRestDuration = restDuration + restDurationPad&amp;#10;&amp;#10;thisExp.addData('thisRestDuration', thisRestDuration + restDuration)&amp;#10;" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="rest_crosshair_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="rest_end_crosshair">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.5" valType="code"/>
        <Param name="name" updates="None" val="rest_end_crosshair" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="time (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$thisRestDuration" valType="code"/>
        <Param name="text" updates="constant" val="+" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="rest_begin">
      <CodeComponent name="rest_begin_code">
        <Param name="Begin Experiment" updates="constant" val="# set desired duration for rest&amp;#10;# note this will be padded with a few varying seconds&amp;#10;restDuration = 10" valType="extendedCode"/>
        <Param name="Begin JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Begin Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="Code Type" updates="None" val="Py" valType="str"/>
        <Param name="Each Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="Each JS Frame" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Experiment" updates="constant" val="" valType="extendedCode"/>
        <Param name="End JS Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="End Routine" updates="constant" val="" valType="extendedCode"/>
        <Param name="name" updates="None" val="rest_begin_code" valType="code"/>
      </CodeComponent>
      <TextComponent name="rest_begin_crosshair">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.5" valType="code"/>
        <Param name="name" updates="None" val="rest_begin_crosshair" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="$restDuration" valType="code"/>
        <Param name="text" updates="constant" val="+" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
    </Routine>
    <Routine name="instructions">
      <TextComponent name="instructions_text">
        <Param name="color" updates="constant" val="white" valType="str"/>
        <Param name="colorSpace" updates="constant" val="rgb" valType="str"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="flip" updates="constant" val="" valType="str"/>
        <Param name="font" updates="constant" val="Arial" valType="str"/>
        <Param name="languageStyle" updates="None" val="LTR" valType="str"/>
        <Param name="letterHeight" updates="constant" val="0.1" valType="code"/>
        <Param name="name" updates="None" val="instructions_text" valType="code"/>
        <Param name="opacity" updates="constant" val="1" valType="code"/>
        <Param name="ori" updates="constant" val="0" valType="code"/>
        <Param name="pos" updates="constant" val="(0, 0)" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="text" updates="constant" val="    instructions:&amp;#10;&amp;#10;press &quot;space&quot; to start" valType="str"/>
        <Param name="units" updates="None" val="from exp settings" valType="str"/>
        <Param name="wrapWidth" updates="constant" val="" valType="code"/>
      </TextComponent>
      <KeyboardComponent name="instructions_key">
        <Param name="allowedKeys" updates="constant" val="'space'" valType="code"/>
        <Param name="correctAns" updates="constant" val="" valType="str"/>
        <Param name="discard previous" updates="constant" val="True" valType="bool"/>
        <Param name="durationEstim" updates="None" val="" valType="code"/>
        <Param name="forceEndRoutine" updates="constant" val="True" valType="bool"/>
        <Param name="name" updates="None" val="instructions_key" valType="code"/>
        <Param name="startEstim" updates="None" val="" valType="code"/>
        <Param name="startType" updates="None" val="time (s)" valType="str"/>
        <Param name="startVal" updates="None" val="0.0" valType="code"/>
        <Param name="stopType" updates="None" val="duration (s)" valType="str"/>
        <Param name="stopVal" updates="constant" val="" valType="code"/>
        <Param name="store" updates="constant" val="nothing" valType="str"/>
        <Param name="storeCorrect" updates="constant" val="False" valType="bool"/>
        <Param name="syncScreenRefresh" updates="constant" val="True" valType="bool"/>
      </KeyboardComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="instructions"/>
    <Routine name="wait_for_scanner"/>
    <LoopInitiator loopType="TrialHandler" name="msit_block_condition_order">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('TrialList', 'stimuli/InconList_4nums.csv')]), OrderedDict([('TrialList', 'stimuli/ConList_4nums.csv')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stimuli/msit_block_order_4nums.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="4" valType="code"/>
      <Param name="name" updates="None" val="msit_block_condition_order" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="rest_begin"/>
    <LoopInitiator loopType="TrialHandler" name="trial_list">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="None" valType="str"/>
      <Param name="conditionsFile" updates="None" val="$TrialList" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="4" valType="code"/>
      <Param name="name" updates="None" val="trial_list" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="trial"/>
    <Routine name="feedback"/>
    <LoopTerminator name="trial_list"/>
    <Routine name="rest_end"/>
    <LoopTerminator name="msit_block_condition_order"/>
  </Flow>
</PsychoPy2experiment>
